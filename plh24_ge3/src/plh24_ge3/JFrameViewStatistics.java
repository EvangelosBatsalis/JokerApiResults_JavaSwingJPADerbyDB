/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package plh24_ge3;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonPrimitive;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Collections;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import java.awt.Desktop;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;

/**
 *
 * @author Evangelos
 */
public class JFrameViewStatistics extends javax.swing.JFrame {

    //δημιουργία global μεταβλητών
    String comboValue;

    // δημιουργία πινάκων αποθήκευσης δεδομένων
    String[] header = new String[3];

    String[] ocurrs = new String[50];
    String[] delays = new String[50];
    String[] countingNumbers = new String[50];

    String[] bonusNumbersOcurrs = new String[50];
    String[] bonusNumbersDelays = new String[50];
    String[] bonusNumbersCoutningNumber = new String[50];

    /**
     * Creates new form NewJFrame
     */
    public JFrameViewStatistics() {
        this.setTitle("Προβολή στατιστικών δεδομένων ΤΖΟΚΕΡ και εκτύπωση σε αρχείο pdf");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        calendarPanel1 = new com.github.lgooddatepicker.components.CalendarPanel();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        datePickerFrom = new com.github.lgooddatepicker.components.DatePicker();
        jLabel5 = new javax.swing.JLabel();
        datePickerTo = new com.github.lgooddatepicker.components.DatePicker();
        jSeparator1 = new javax.swing.JSeparator();
        jButtonViewGraphStats = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButtonView = new javax.swing.JButton();
        jButtonPdfPrint = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabelDateFrom = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabelDateTo = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabelTotalDraws = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableWinningNumberStats = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableWinningBonusNumberStats = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Προβολή Στατιστικών");
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N

        jLabel3.setText("Εισάγετε έυρος ημερομηνιών ή απλά πατήστε ");

        jLabel8.setText("το κουμπί overall για την προβολή δεδομένων όλων των παιχνιδιών");

        jLabel2.setText("Εισάγετε ημερομηνία από:");

        jLabel5.setText("εώς:");

        jButtonViewGraphStats.setText("Προβολή στατιστικών στοιχείων κληρώσεων σε γραφική μορφή");
        jButtonViewGraphStats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonViewGraphStatsActionPerformed(evt);
            }
        });

        jButton5.setText("Προβολή");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButtonView.setText("Overall Προβολή");
        jButtonView.setToolTipText("");
        jButtonView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonViewActionPerformed(evt);
            }
        });

        jButtonPdfPrint.setText("Εκτύπωση");
        jButtonPdfPrint.setEnabled(false);
        jButtonPdfPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPdfPrintActionPerformed(evt);
            }
        });

        jLabel4.setText("Προβολή στατιστικών αριθμών παιχνιδιού:");
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel7.setText("Ημερομηνία από:");
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabelDateFrom.setText("             ");

        jLabel10.setText("εώς:");
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabelDateTo.setText("          ");

        jLabel9.setText("Πλήθος Κληρώσεων:");
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabelTotalDraws.setText("         ");

        jButton3.setText("Καθαρισμός φόρμας");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButtonViewGraphStats)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonView)
                                    .addGap(42, 42, 42)
                                    .addComponent(jButtonPdfPrint)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))))
                .addContainerGap(174, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(datePickerFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(datePickerTo, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(284, 284, 284))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelTotalDraws, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(187, 187, 187))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelDateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelDateTo, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(101, 101, 101))))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(293, 293, 293)
                .addComponent(jButton3)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(datePickerFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(datePickerTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButtonView)
                    .addComponent(jButtonPdfPrint))
                .addGap(18, 18, 18)
                .addComponent(jButtonViewGraphStats)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10)
                    .addComponent(jLabelDateFrom)
                    .addComponent(jLabelDateTo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTotalDraws)
                    .addComponent(jLabel9))
                .addGap(36, 36, 36))
        );

        datePickerFrom.getAccessibleContext().setAccessibleName("");

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTableWinningNumberStats.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jTableWinningNumberStats);

        jLabel11.setText("Αριθμοί:");

        jLabel12.setText("Εμφανίσεις:");

        jLabel13.setText("Μη εμφανίσεις:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel11)
                        .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1416, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel11)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13)
                        .addGap(0, 33, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTableWinningBonusNumberStats.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableWinningBonusNumberStats.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableWinningBonusNumberStats);

        jLabel16.setText("Αριθμοί Τζόκερ:");

        jLabel15.setText("Εμφανίσεις:");

        jLabel14.setText("Μη εμφανίσεις: ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel15)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1)
                .addGap(16, 16, 16))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel14))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(353, 353, 353))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonViewGraphStatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonViewGraphStatsActionPerformed
        // TODO add your handling code here:
        GraphStats gs = new GraphStats();
        gs.pack();
        gs.setLocationRelativeTo(null);
        gs.setVisible(true);
    }//GEN-LAST:event_jButtonViewGraphStatsActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        //υλοποίηση επιλογής παιχνιδιών και έξοδος στατιστικών βάση επιλο΄γης ημερομηνιών

        int SizeOfArrayWinningNumbers = 0; //αρχικοποίηση μεταβλητής για χρήσεις εκτός if..else ώστε να γίνει έλεγχος κενής λίστας

        if (datePickerFrom.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "παρακαλώ δηλώστε ημερομηνία από...", "ΠΡΟΣΟΧΗ!!", JOptionPane.INFORMATION_MESSAGE);
        } else if (datePickerTo.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "παρακαλώ δηλώστε ημερομηνία εώς...", "ΠΡΟΣΟΧΗ!!", JOptionPane.INFORMATION_MESSAGE);
        } else {

            LocalDate datePFrom = datePickerFrom.getDate();
            LocalDate datePTo = datePickerTo.getDate();

            //προτροπή με μήνυμα στον χρήστη να μην βάλει πάνω από ένα όριο ημερομηνιών διότι σκάει το API
            long days = ChronoUnit.DAYS.between(datePFrom, datePTo);
            if (days >= 25) {
                JOptionPane.showMessageDialog(null, "Παρακαλώ όχι πάνω από 25 ημέρες", "ΠΡΟΣΟΧΗ!!", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            //Endeiktiko paradeigma EAP όπως αναφέρεται από την δοκιμαστική οδηγία.
            String urlToCall = "https://api.opap.gr/draws/v3.0/5104/draw-date/" + datePickerFrom + "/" + datePickerTo;
            OkHttpClient client = new OkHttpClient();
            Request request = new Request.Builder().url(urlToCall).build();
            String parseResponseString = null;
            try (Response response = client.newCall(request).execute()) {
                if (response.isSuccessful() && response.body() != null) {
                    parseResponseString = response.body().string();
                }
            } catch (IOException e) {
                System.out.println(e);
            }
            GsonBuilder builder = new GsonBuilder();
            builder.setPrettyPrinting();
            Gson gson = builder.create();

            JsonObject jsonObj = gson.fromJson(parseResponseString, JsonObject.class);

            jTableWinningNumberStats.setVisible(true);
            jTableWinningBonusNumberStats.setVisible(true);
            this.jButtonPdfPrint.setEnabled(true);

            JsonPrimitive prim = (JsonPrimitive) jsonObj.get("totalElements");//πήρα το totalElements

            SizeOfArrayWinningNumbers = prim.getAsInt();
            int SizeOfArrayBonusNumbers = prim.getAsInt();

            //το API δέχεται μέχρι 1 σελίδα δηλαδή 10 παιχνίδια. Θα βγάζει μήνυμα στον χρήστη να εισάγει μικρότερη ημερομηνία με χρήση αμυντικού προγραμματισμού
            if (SizeOfArrayWinningNumbers <= 10) {
                JsonArray contentArray = jsonObj.getAsJsonArray("content");

                ArrayList<Integer> ArrayOfWinningNumber = new ArrayList<>();
                ArrayList<Integer> ArrayOfJoker = new ArrayList<>();

                //loop παιρνει τα δεδομενα από json τα bonus και τα προσθετει σε μια λιστα
                for (int i = 0; i < SizeOfArrayWinningNumbers; i++) {
                    JsonObject obj = (JsonObject) jsonObj.get("content").getAsJsonArray().get(i).getAsJsonObject().get("winningNumbers");
                    JsonArray arrayOfList = obj.get("list").getAsJsonArray();//pairnei dedomena winning numbers
                    for (int j = 0; j < arrayOfList.size(); j++) {
                        ArrayOfWinningNumber.add(Integer.parseInt(arrayOfList.get(j).getAsString()));//ta prosthetei sth lista
                    }
                }

                //loop παιρνει τα δεδομενα από json τα bonus και τα προσθετει σε μια λιστα
                for (int i = 0; i < SizeOfArrayBonusNumbers; i++) {
                    JsonObject obj = (JsonObject) jsonObj.get("content").getAsJsonArray().get(i).getAsJsonObject().get("winningNumbers");
                    JsonArray arrayOfBonus = obj.get("bonus").getAsJsonArray();//pairnei dedomena BONUS numbers
                    for (int j = 0; j < arrayOfBonus.size(); j++) {
                        ArrayOfJoker.add(Integer.parseInt(arrayOfBonus.get(j).getAsString()));//ta prosthetei sth lista
                    }
                }

                //ταξινόμιση λίστας
                Collections.sort(ArrayOfWinningNumber);
                Collections.sort(ArrayOfJoker);

                //μεταφορά σε string των συχνά εμφανιζόμενων αριθμών και μετατροπη ωστε να μπει σε jTable
                int iteral = 0;
                for (int i = 1; i <= 45; i++) {
                    int temp = Collections.frequency(ArrayOfWinningNumber, i);
                    countingNumbers[iteral] = Integer.toString(i);
                    ocurrs[iteral] = Integer.toString(temp);
                    delays[iteral] = "-";
                    iteral++;
                }
                iteral = 0;
                for (int i = 1; i <= 20; i++) {
                    int temp = Collections.frequency(ArrayOfJoker, i);
                    bonusNumbersCoutningNumber[iteral] = Integer.toString(i);
                    bonusNumbersOcurrs[iteral] = Integer.toString(temp);
                    bonusNumbersDelays[iteral] = "-";
                    iteral++;
                }
                //Καταχωρώ στον πίνακα τις Κληρώσεις και τις Καθυστερήσεις
                //έξοδος κενού column και σβήσιμο της κεφαλίδας του κάθε column για λόγους αισθητικής του προγράμματος
                String[] emptyArray = new String[50];
                String[] Column = new String[45];
                for (int i = 0; i < 45; i++) {
                    Column[i] = String.valueOf("");
                    emptyArray[i] = "";
                }

                DefaultTableModel model = new DefaultTableModel();
                model.setColumnIdentifiers(Column);
                model.addRow(countingNumbers);
                model.addRow(emptyArray);
                model.addRow(ocurrs);
                model.addRow(emptyArray);
                model.addRow(delays);
                jTableWinningNumberStats.setModel(model);

                //Έξοδος στοιχείων στο jTableBonusWinningNumber
                //έξοδος κενού column και σβήσιμο της κεφαλίδας του κάθε column για λόγους αισθητικής του προγράμματος
                String[] emptyArray2 = new String[20];
                String[] Column2 = new String[20];
                for (int i = 0; i < 20; i++) {
                    Column2[i] = String.valueOf("");
                    emptyArray2[i] = "";
                }

                DefaultTableModel model2 = new DefaultTableModel();
                model2.setColumnIdentifiers(Column2);
                model2.addRow(bonusNumbersCoutningNumber);
                model2.addRow(emptyArray2);
                model2.addRow(bonusNumbersOcurrs);
                model2.addRow(emptyArray2);
                model2.addRow(bonusNumbersDelays);
                jTableWinningBonusNumberStats.setModel(model2);

                jLabelDateFrom.setText(datePickerFrom.getText());
                jLabelDateTo.setText(datePickerTo.getText());
                jLabelTotalDraws.setText(Integer.toString(SizeOfArrayWinningNumbers));
            } else {
                JOptionPane.showMessageDialog(null, "Προβολή μέχρι 10 παιχνίδια. Παρακαλώ μικρύνετε το εύρος ημερομηνιών", "ΠΡΟΣΟΧΗ!!", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButtonViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonViewActionPerformed
        jTableWinningNumberStats.setVisible(true);
        jTableWinningBonusNumberStats.setVisible(true);
        this.jButtonPdfPrint.setEnabled(true);
        String urlToCall = "https://api.opap.gr/games/v1.0/5104/statistics";
        OkHttpClient client = new OkHttpClient();
        String responseString = null;
        Request request = new Request.Builder().url(urlToCall).build();

        int iteral = 0; //for counter use into for..each

        try (Response response = client.newCall(request).execute()) {
            if (response.isSuccessful() && response.body() != null) {
                responseString = response.body().string();
                System.out.println(responseString);
            }

            GsonBuilder builder = new GsonBuilder();
            builder.setPrettyPrinting();
            Gson gson = builder.create();

            JsonObject jsonObj = gson.fromJson(responseString, JsonObject.class);

            JsonObject StatisticsObject = jsonObj.getAsJsonObject("header");  //winningNumber Object
            JsonArray winningNumbers = jsonObj.get("numbers").getAsJsonArray();
            JsonArray statsbonusNumbers = jsonObj.get("bonusNumbers").getAsJsonArray();

            for (int i = 0; i < 3; i++) {
                header[0] = StatisticsObject.get("dateFrom").getAsString();
                header[1] = StatisticsObject.get("dateTo").getAsString();
                header[2] = StatisticsObject.get("drawCount").getAsString();
            }

            //έξοδος στον πίνακα jTableWinningNumbers
            for (JsonElement winningNumbersArrayParsing : winningNumbers) {
                JsonObject winningNumbersArrayStatistics = winningNumbersArrayParsing.getAsJsonObject();
                //Καταχωρώ στον πίνακα τις Κληρώσεις τις Καθυστερήσεις και τους αριθμού;
                ocurrs[iteral] = winningNumbersArrayStatistics.get("occurrences").toString();
                delays[iteral] = winningNumbersArrayStatistics.get("delays").toString();
                countingNumbers[iteral] = winningNumbersArrayStatistics.get("number").toString();
                iteral++;
            }

            //έξοδος κενού column και σβήσιμο της κεφαλίδας του κάθε column για λόγους αισθητικής του προγράμματος
            String[] emptyArray = new String[50];
            String[] Column = new String[45];
            for (int i = 0; i < 45; i++) {
                Column[i] = String.valueOf("");
                emptyArray[i] = "";
            }

            DefaultTableModel model = new DefaultTableModel();
            model.setColumnIdentifiers(Column);
            model.addRow(countingNumbers);
            model.addRow(emptyArray);
            model.addRow(ocurrs);
            model.addRow(emptyArray);
            model.addRow(delays);
            jTableWinningNumberStats.setModel(model);

            //Έξοδος στοιχείων στο jTableBonusWinningNumber
            //έξοδος κενού column και σβήσιμο της κεφαλίδας του κάθε column για λόγους αισθητικής του προγράμματος
            String[] emptyArray2 = new String[20];
            String[] Column2 = new String[20];
            for (int i = 0; i < 20; i++) {
                Column2[i] = String.valueOf("");
                emptyArray2[i] = "";
            }
            iteral = 0;
            for (JsonElement winningNumbersArrayParsing : statsbonusNumbers) {
                JsonObject winningNumbersArrayStatistics = winningNumbersArrayParsing.getAsJsonObject();
                //Καταχωρώ στον πίνακα τις Κληρώσεις και τις Καθυστερήσεις
                bonusNumbersOcurrs[iteral] = winningNumbersArrayStatistics.get("occurrences").toString();
                bonusNumbersDelays[iteral] = winningNumbersArrayStatistics.get("delays").toString();
                bonusNumbersCoutningNumber[iteral] = winningNumbersArrayStatistics.get("number").toString();
                iteral++;
            }

            DefaultTableModel model2 = new DefaultTableModel();
            model2.setColumnIdentifiers(Column2);
            model2.addRow(bonusNumbersCoutningNumber);
            model2.addRow(emptyArray2);
            model2.addRow(bonusNumbersOcurrs);
            model2.addRow(emptyArray2);
            model2.addRow(bonusNumbersDelays);
            jTableWinningBonusNumberStats.setModel(model2);

            //Εξοδος στα JLabel στατιστικών
            //epoh timestamp converter
            Date dateFrom = new Date(Integer.parseInt(header[0]) * 1000L);
            SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
            String myDateFrom = format.format(dateFrom);

            //epoh timestamp converter
            Date dateTo = new Date(Integer.parseInt(header[1]) * 1000L);
            String myDateTo = format.format(dateTo);

            jLabelDateFrom.setText(myDateFrom);
            jLabelDateTo.setText(myDateTo);
            jLabelTotalDraws.setText(header[2]);

            SimpleDateFormat format2 = new SimpleDateFormat("dd MMMM yyyy");
            String myDateFrom2 = format2.format(dateFrom);
            String myDateTo2 = format2.format(dateTo);
            datePickerFrom.setText(myDateFrom2);
            datePickerTo.setText(myDateTo2);

        } catch (IOException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButtonViewActionPerformed

    private void jButtonPdfPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPdfPrintActionPerformed
        // Εκκίνηση προγράμματος εκτύπωσης σε pdf

        try {
            Document document = new Document(PageSize.A3.rotate());

            OutputStream outputStream = new FileOutputStream(new File("StatisticsOutput.pdf"));

            PdfWriter.getInstance(document, outputStream);

            document.open();

            PdfPTable NumberPDF_tableWN = new PdfPTable(45);
            PdfPCell[] NumberPDF_cellWN = new PdfPCell[45];
            document.add(new Paragraph("Welcome statistic output"));
            document.add(Chunk.NEWLINE);    //adding empty new line
            document.add(Chunk.NEWLINE);    //adding empty new line

            document.add(new Paragraph("Statistics for Winning Numbers"));
            document.add(Chunk.NEWLINE);    //adding empty new line
            //Κώδικας εκτύπωσης array σε pdf αφορα WinningNumber
            //numbers
            document.add(new Paragraph("Numbers: "));
            for (int i = 0; i < 45; i++) {
                NumberPDF_cellWN[i] = new PdfPCell(new Paragraph(countingNumbers[i]));
                NumberPDF_tableWN.addCell(NumberPDF_cellWN[i]);
            }
            NumberPDF_tableWN.setWidthPercentage(100);
            document.add(NumberPDF_tableWN);

            //Occurrences
            document.add(new Paragraph("Occurrences: "));
            PdfPTable occurrPDF_tableWN = new PdfPTable(45);
            PdfPCell[] occurrPDF_cellWN = new PdfPCell[45];
            for (int i = 0; i < 45; i++) {
                occurrPDF_cellWN[i] = new PdfPCell(new Paragraph(ocurrs[i]));
                occurrPDF_tableWN.addCell(occurrPDF_cellWN[i]);
            }
            occurrPDF_tableWN.setWidthPercentage(100);
            document.add(occurrPDF_tableWN);

            //Delays
            document.add(new Paragraph("Delays: "));
            PdfPTable delaysPDF_tableWN = new PdfPTable(45);
            PdfPCell[] delaysPDF_cellWN = new PdfPCell[45];
            for (int i = 0; i < 45; i++) {
                delaysPDF_cellWN[i] = new PdfPCell(new Paragraph(delays[i]));
                delaysPDF_tableWN.addCell(delaysPDF_cellWN[i]);
            }
            delaysPDF_tableWN.setWidthPercentage(100);
            document.add(delaysPDF_tableWN);

            document.add(Chunk.NEWLINE);    //adding empty new line
            document.add(Chunk.NEWLINE);    //adding empty new line
            document.add(Chunk.NEWLINE);    //adding empty new line
            document.add(Chunk.NEWLINE);    //adding empty new line
            document.add(Chunk.NEWLINE);    //adding empty new line
            document.add(Chunk.NEWLINE);    //adding empty new line

            document.add(new Paragraph("Statistics for Joker Winning Numbers"));
            document.add(Chunk.NEWLINE);    //adding empty new line
            //Κώδικας εκτύπωσης array σε pdf αφορα Joker Winning Numbers
            //numbers
            PdfPTable NumberPDF_tableJN = new PdfPTable(45);
            PdfPCell[] NumberPDF_cellJN = new PdfPCell[45];
            document.add(new Paragraph("Numbers: "));
            for (int i = 0; i < 45; i++) {
                NumberPDF_cellJN[i] = new PdfPCell(new Paragraph(countingNumbers[i]));
                NumberPDF_tableJN.addCell(NumberPDF_cellJN[i]);
            }
            NumberPDF_tableJN.setWidthPercentage(100);
            document.add(NumberPDF_tableJN);

            //Occurrences
            document.add(new Paragraph("Occurrences: "));
            PdfPTable occurrPDF_tableJN = new PdfPTable(45);
            PdfPCell[] occurrPDF_cellJN = new PdfPCell[45];
            for (int i = 0; i < 45; i++) {
                occurrPDF_cellJN[i] = new PdfPCell(new Paragraph(ocurrs[i]));
                occurrPDF_tableJN.addCell(occurrPDF_cellJN[i]);
            }
            occurrPDF_tableJN.setWidthPercentage(100);
            document.add(occurrPDF_tableJN);

            //Delays
            document.add(new Paragraph("Delays: "));
            PdfPTable delaysPDF_tableJN = new PdfPTable(45);
            PdfPCell[] delaysPDF_cellJN = new PdfPCell[45];
            for (int i = 0; i < 45; i++) {
                delaysPDF_cellJN[i] = new PdfPCell(new Paragraph(delays[i]));
                delaysPDF_tableJN.addCell(delaysPDF_cellJN[i]);
            }
            delaysPDF_tableJN.setWidthPercentage(100);
            document.add(delaysPDF_tableJN);

            document.close();
            outputStream.close();

            File myFile = new File("StatisticsOutput.pdf");
            Desktop.getDesktop().open(myFile);
        } catch (DocumentException | IOException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButtonPdfPrintActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        datePickerFrom.setText("");
        datePickerTo.setText("");

        jLabelDateFrom.setText("");
        jLabelDateTo.setText("");
        jLabelTotalDraws.setText("");

        //Γίνεται μηδενισμός των πινάκων ώστε όταν γίνει καθαρισμός φόρμας να μην τυπώνει τύποτα στο pdf
        //έξοδος κενού column και σβήσιμο της κεφαλίδας του κάθε column για λόγους αισθητικής του προγράμματος
        String[] emptyArray = new String[50];
        String[] Column = new String[45];
        for (int i = 0; i < 45; i++) {
            Column[i] = String.valueOf("");
            emptyArray[i] = "";
        }

        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(Column);
        model.addRow(emptyArray);
        model.addRow(emptyArray);
        model.addRow(emptyArray);
        model.addRow(emptyArray);
        model.addRow(emptyArray);
        jTableWinningNumberStats.setModel(model);
        //Έξοδος στοιχείων στο jTableBonusWinningNumber
        //έξοδος κενού column και σβήσιμο της κεφαλίδας του κάθε column για λόγους αισθητικής του προγράμματος
        String[] emptyArray2 = new String[20];
        String[] Column2 = new String[20];
        for (int i = 0; i < 20; i++) {
            Column2[i] = String.valueOf("");
            emptyArray2[i] = "";
        }
        DefaultTableModel model2 = new DefaultTableModel();
        model2.setColumnIdentifiers(Column2);
        model2.addRow(emptyArray2);
        model2.addRow(emptyArray2);
        model2.addRow(emptyArray2);
        model2.addRow(emptyArray2);
        model2.addRow(emptyArray2);
        jTableWinningBonusNumberStats.setModel(model2);

        //αρχικοποίηση πινάκων visible και κουμπιού εκτύπωσης
        jTableWinningNumberStats.setVisible(false);
        jTableWinningBonusNumberStats.setVisible(false);
        jButtonPdfPrint.setEnabled(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameViewStatistics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameViewStatistics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameViewStatistics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameViewStatistics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameViewStatistics().setVisible(true);
            }
        });

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.github.lgooddatepicker.components.CalendarPanel calendarPanel1;
    private com.github.lgooddatepicker.components.DatePicker datePickerFrom;
    private com.github.lgooddatepicker.components.DatePicker datePickerTo;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButtonPdfPrint;
    private javax.swing.JButton jButtonView;
    private javax.swing.JButton jButtonViewGraphStats;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelDateFrom;
    private javax.swing.JLabel jLabelDateTo;
    private javax.swing.JLabel jLabelTotalDraws;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTableWinningBonusNumberStats;
    private javax.swing.JTable jTableWinningNumberStats;
    // End of variables declaration//GEN-END:variables
}
